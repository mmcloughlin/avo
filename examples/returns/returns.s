// Code generated by command: go run asm.go -out returns.s -stubs stub.go. DO NOT EDIT.

#include "textflag.h"

// func Interval(start uint64, size uint64) (uint64, uint64)
TEXT ·Interval(SB), NOSPLIT, $0-32
	MOVQ start+0(FP), AX
	MOVQ size+8(FP), CX
	ADDQ AX, CX
	MOVQ AX, ret+16(FP)
	MOVQ CX, ret1+24(FP)
	RET

// func Butterfly(x0 float64, x1 float64) (y0 float64, y1 float64)
// Requires: SSE2
TEXT ·Butterfly(SB), NOSPLIT, $0-32
	MOVSD x0+0(FP), X0
	MOVSD x1+8(FP), X1
	MOVSD X0, X2
	ADDSD X1, X2
	MOVSD X0, X3
	SUBSD X1, X3
	MOVSD X2, y0+16(FP)
	MOVSD X3, y1+24(FP)
	RET

// func Septuple(byte) [7]byte
TEXT ·Septuple(SB), NOSPLIT, $0-15
	MOVB arg+0(FP), AL
	MOVB AL, ret_0+8(FP)
	MOVB AL, ret_1+9(FP)
	MOVB AL, ret_2+10(FP)
	MOVB AL, ret_3+11(FP)
	MOVB AL, ret_4+12(FP)
	MOVB AL, ret_5+13(FP)
	MOVB AL, ret_6+14(FP)
	RET

// func CriticalLine(t float64) complex128
// Requires: SSE2
TEXT ·CriticalLine(SB), NOSPLIT, $0-24
	MOVSD t+0(FP), X0
	MOVSD half<>+0(SB), X1
	MOVSD X1, ret_real+8(FP)
	MOVSD X0, ret_imag+16(FP)
	RET

DATA half<>+0(SB)/8, $(0.5)
GLOBL half<>(SB), RODATA|NOPTR, $8

// func NewStruct(w uint16, p [2]float64, q uint64) Struct
// Requires: SSE2
TEXT ·NewStruct(SB), NOSPLIT, $0-64
	MOVW  w+0(FP), AX
	MOVSD p_0+8(FP), X0
	MOVSD p_1+16(FP), X1
	MOVQ  q+24(FP), CX
	MOVW  AX, ret_Word+32(FP)
	MOVSD X0, ret_Point_0+40(FP)
	MOVSD X1, ret_Point_1+48(FP)
	MOVQ  CX, ret_Quad+56(FP)
	RET
