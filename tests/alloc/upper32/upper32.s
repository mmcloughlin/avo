// Code generated by command: go run asm.go -out upper32.s -stubs stub.go. DO NOT EDIT.

#include "textflag.h"

// func Upper32() uint64
TEXT Â·Upper32(SB), NOSPLIT, $0-8
	// Initialize sum.
	XORQ AX, AX

	// Iteration 1.
	MOVQ $0x00000001, CX
	MOVQ $0x00000002, DX
	MOVQ $0x00000003, BX
	MOVQ $0x00000004, BP
	MOVQ $0x00000005, SI
	MOVQ $0x00000006, DI
	MOVQ $0x00000007, R8
	MOVQ $0x00000008, R9
	MOVQ $0x00000009, R10
	MOVQ $0x0000000a, R11
	MOVQ $0x0000000b, R12
	MOVQ $0x0000000c, R13
	MOVQ $0x0000000d, R14
	MOVQ $0x0000000e, R15
	ADDQ CX, AX
	ADDQ DX, AX
	ADDQ BX, AX
	ADDQ BP, AX
	ADDQ SI, AX
	ADDQ DI, AX
	ADDQ R8, AX
	ADDQ R9, AX
	ADDQ R10, AX
	ADDQ R11, AX
	ADDQ R12, AX
	ADDQ R13, AX
	ADDQ R14, AX
	ADDQ R15, AX

	// Iteration 2.
	MOVQ $0x0000000f, CX
	MOVQ $0x00000010, DX
	MOVQ $0x00000011, BX
	MOVQ $0x00000012, BP
	MOVQ $0x00000013, SI
	MOVQ $0x00000014, DI
	MOVQ $0x00000015, R8
	MOVQ $0x00000016, R9
	MOVQ $0x00000017, R10
	MOVQ $0x00000018, R11
	MOVQ $0x00000019, R12
	MOVQ $0x0000001a, R13
	MOVQ $0x0000001b, R14
	MOVQ $0x0000001c, R15
	ADDQ CX, AX
	ADDQ DX, AX
	ADDQ BX, AX
	ADDQ BP, AX
	ADDQ SI, AX
	ADDQ DI, AX
	ADDQ R8, AX
	ADDQ R9, AX
	ADDQ R10, AX
	ADDQ R11, AX
	ADDQ R12, AX
	ADDQ R13, AX
	ADDQ R14, AX
	ADDQ R15, AX

	// Iteration 3.
	MOVQ $0x0000001d, CX
	MOVQ $0x0000001e, DX
	MOVQ $0x0000001f, BX
	MOVQ $0x00000020, BP
	MOVQ $0x00000021, SI
	MOVQ $0x00000022, DI
	MOVQ $0x00000023, R8
	MOVQ $0x00000024, R9
	MOVQ $0x00000025, R10
	MOVQ $0x00000026, R11
	MOVQ $0x00000027, R12
	MOVQ $0x00000028, R13
	MOVQ $0x00000029, R14
	MOVQ $0x0000002a, R15
	ADDQ CX, AX
	ADDQ DX, AX
	ADDQ BX, AX
	ADDQ BP, AX
	ADDQ SI, AX
	ADDQ DI, AX
	ADDQ R8, AX
	ADDQ R9, AX
	ADDQ R10, AX
	ADDQ R11, AX
	ADDQ R12, AX
	ADDQ R13, AX
	ADDQ R14, AX
	ADDQ R15, AX
	MOVQ AX, ret+0(FP)
	RET
