#!/bin/bash -ex

# Ensure the repository is clean after code generation.
./script/generate
test -z "$(git status --porcelain)"

# Still clean after formatting.
./script/fmt
test -z "$(git status --porcelain)"

# And it's still clean after asmfmt.
# Note: we want to confirm we agree with asmfmt without actually depending on it.
find . -name '*.s' | xargs asmfmt -w
test -z "$(git status --porcelain)"

# Run suite of golangci-lint checks.
# (Provide examples directory explicitly since it is skipped by default.)
golangci-lint run ./... ./examples/...

# Check asm declarations. Exclude issue #145 regression test due to problems
# with the way asmdecl handles large or composite types. See
# https://github.com/golang/go/issues/39220.
asmdecl $(go list ./... | grep -v issue145)

# Custom linters.
./script/linter/pkgdoc
